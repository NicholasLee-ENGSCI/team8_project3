hist(temp2, main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
(0.02644957/100)*1.96
n=100000
customers = rpois(n,20)
prob = as.numeric(customers<12)
mean(prob)
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 16
cust = rpois(n,20)
temp1 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp1[i]=0
}else{
temp1[i] = seats - sum(tot)
}
}
hist(temp1, main="Histogram of empty seats (initially 16 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp2 = numeric(n) ## CHANGE THE X-AXIS AS WHOLE NUMBERS
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp2[i]=0
}else{
temp2[i] = seats - sum(tot)
}
}
hist(temp2, main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
suppressMessages(library("tidyverse"))
inflows = read.csv("inflows.csv")
inflows_tibble = as_tibble(inflows)
LakePukaki_mi=inflows_tibble%>%
select(c(1,2,5))%>%
group_by(YEAR)%>%
summarise(mean_inflow=mean(Lake_Pukaki))
hist(LakePukaki_mi$mean_inflow)
suppressMessages(library("tidyverse"))
inflows = read.csv("inflows.csv")
inflows_tibble = as_tibble(inflows)
LakePukaki_mi=inflows_tibble%>%
select(c(1,2,5))%>%
group_by(YEAR)%>%
summarise(mean_inflow=mean(Lake_Pukaki))
hist(LakePukaki_mi$mean_inflow,breaks=100)
suppressMessages(library("tidyverse"))
inflows = read.csv("inflows.csv")
inflows_tibble = as_tibble(inflows)
LakePukaki_mi=inflows_tibble%>%
select(c(1,2,5))%>%
group_by(YEAR)%>%
summarise(mean_inflow=mean(Lake_Pukaki))
hist(LakePukaki_mi$mean_inflow,breaks=25)
suppressMessages(library("tidyverse"))
inflows = read.csv("inflows.csv")
inflows_tibble = as_tibble(inflows)
LakePukaki_mi=inflows_tibble%>%
select(c(1,2,5))%>%
group_by(YEAR)%>%
summarise(mean_inflow=mean(Lake_Pukaki))
hist(LakePukaki_mi$mean_inflow)
a = table(LakePukaki_mi$YEAR,LakePukaki_mi$mean_inflow<60)
sum(a[,2])/26
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=25)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339")
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="(initially 8 seats available) \n Nicholas Lee 901571339")
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="Histogram of x \n Nicholas Lee 901571339")
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="Histogram of mean annual inflow \n Nicholas Lee 901571339")
mean(x)
sd(x)
set.seed(339)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="Histogram of mean annual inflow \n Nicholas Lee 901571339",xlab="mean annual inflow")
mean(x)
sd(x)
mean(x)
sd(x)
mean(x)
sd(x)
mean(x)
sd(x)
1.96*(12.27372/100)
y = as.numeric(x<60)
mean(y)
sd(y)
(0.3911305/100)*1.96
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp)
mean(temp)
sd(temp)
set.seed(339)
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp)
mean(temp)
sd(temp)
1.96*(12.21847/100)
temp1 = as.numeric(temp<60)
mean(temp1)
sd(temp1)
0.31952*1.96/100
sum(LakePukaki_mi$mean_inflow)/26
73.9-0.24
set.seed(339)
n=10000
piece = sample(c("L","R"),n,prob=c(17.5/30,12.5/30),replace = TRUE)
v = runif(n)
x = ifelse(piece=="L",40+35*sqrt(v),100-25*sqrt(v))
hist(x,breaks=100,main="Histogram of mean annual inflow \n Nicholas Lee 901571339",xlab="mean annual inflow")
set.seed(339)
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp,mains = "Histogram of mean annual inflows \n Nicholas Lee 901571339", xlab="mean annual inflows")
set.seed(339)
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp,main = "Histogram of mean annual inflows \n Nicholas Lee 901571339", xlab="mean annual inflows")
set.seed(339)
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp,main = "Histogram of annual mean inflows \n Nicholas Lee 901571339", xlab="annual mean inflows")
set.seed(339)
temp = sample(LakePukaki_mi$mean_inflow,10000,prob=rep(1/26,26),replace=TRUE)
hist(temp,main = "Histogram of annual mean inflows (empirical distribution) \n Nicholas Lee 901571339", xlab="annual mean inflows")
suppressMessages(library("tidyverse"))
inflows = read.csv("inflows.csv")
inflows_tibble = as_tibble(inflows)
LakePukaki_mi=inflows_tibble%>%
select(c(1,2,5))%>%
group_by(YEAR)%>%
summarise(mean_inflow=mean(Lake_Pukaki))
hist(LakePukaki_mi$mean_inflow, main = "Histogram of annual mean inflows \n Nicholas Lee 901571339",xlab = "annual mean inflows")
set.seed(339)
n=100000
customers = rpois(n,20)
prob = as.numeric(customers<12)
mean(prob)
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
set.seed(339)
n=100000
customers = rpois(n,20)
prob = as.numeric(customers<12)
mean(prob)
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 16
cust = rpois(n,20)
temp1 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp1[i]=0
}else{
temp1[i] = seats - sum(tot)
}
}
hist(temp1, main="Histogram of empty seats (initially 16 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp2 = numeric(n) ## CHANGE THE X-AXIS AS WHOLE NUMBERS
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp2[i]=0
}else{
temp2[i] = seats - sum(tot)
}
}
hist(temp2, main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
set.seed(339)
n=100000
customers = rpois(n,20)
prob = as.numeric(customers<12)
mean(prob)
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 16
cust = rpois(n,20)
temp1 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp1[i]=0
}else{
temp1[i] = seats - sum(tot)
}
}
hist(temp1, main="Histogram of empty seats (initially 16 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp2 = numeric(n) ## CHANGE THE X-AXIS AS WHOLE NUMBERS
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp2[i]=0
}else{
temp2[i] = seats - sum(tot)
}
}
hist(temp2, main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency")
mean(temp1)
sd(temp1)
mean(temp2)
sd(temp2)
a=as.numeric(temp1>5)
mean(a)
sd(a)
b=as.numeric(temp2>5)
mean(b)
sd(b)
set.seed(339)
n = 10000
price = 200
seats = 16
cust = rpois(n,20)
temp.high2 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high2[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
n = 10000
price = 300
seats = 16
cust = rpois(n,20)
temp.high3 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high3[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high2 - temp.high3)
n = 10000
price = 400
seats = 16
cust = rpois(n,20)
temp.high4 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high4[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high4 - temp.high3)
n = 10000
price = 200
seats = 8
cust = rpois(n,20)
temp.low2 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.low2[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp.low3 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.low3[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high2 - temp.high3)
price = 400
seats = 8
cust = rpois(n,20)
temp.high4 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high4[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high4 - temp.high3) ## COMPARE ALL THREE PAIRS; 3 to 2 and 3 to 4, if both 2 and 4 are better do 2 to 4.
set.seed(339)
n = 10000
price = 200
seats = 16
cust = rpois(n,20)
temp.high2 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high2[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
n = 10000
price = 300
seats = 16
cust = rpois(n,20)
temp.high3 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high3[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high2 - temp.high3)
n = 10000
price = 400
seats = 16
cust = rpois(n,20)
temp.high4 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.high4[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.high4 - temp.high3)
n = 10000
price = 200
seats = 8
cust = rpois(n,20)
temp.low2 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.low2[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp.low3 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.low3[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.low2 - temp.low3)
price = 400
seats = 8
cust = rpois(n,20)
temp.low4 = numeric(n)
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
summary = data.frame(Arrival.Time = times,Budget = budget)
temp.low4[i] = sim.revenue(summary,seats,10,price,show.plot = FALSE)$Revenue
}
mean(temp.low4 - temp.low3)
source("simulation.R.txt")
set.seed(339)
n = 10000
price = 300
seats = 8
cust = rpois(n,20)
temp2 = numeric(n) ## CHANGE THE X-AXIS AS WHOLE NUMBERS
for(i in 1:n)
{
times = sort(runif(cust[i],min=0,max=10))
budget = runif(cust[i],min=100,max=800-(40*times))
tot = as.numeric(budget>price)
if(sum(tot)>seats){
temp2[i]=0
}else{
temp2[i] = seats - sum(tot)
}
}
hist(temp2, main="Histogram of empty seats (initially 8 seats available) \n Nicholas Lee 901571339",
xlab="Number of empty seats",ylab="frequency",breaks=8)
setwd("C:/Users/nicho/OneDrive/Desktop/Part 2 Semester 2/ENGSCI 263/CM team 8 project 3")
